A3Q1: 
[23, 27, 30, 34, 41, 51, 55, 57, 60, 67, 72, 78, 83, 96]

Sequential Search:
To begin, the for loop begins at the beginning of the array .
It goes through every number in the array until it find the place in the array

a)  Find 72.
    Is 23 equal to 72? No. Move to the next spot in the array.
    Is 27 equal to 72? No. Move to the next spot in the array.
    Is 30 equal to 72? No. Move to the next spot in the array.
    Is 34 equal to 72? No. Move to the next spot in the array.
    Is 41 equal to 72? No. Move to the next spot in the array.
    Is 51 equal to 72? No. Move to the next spot in the array.
    Is 55 equal to 72? No. Move to the next spot in the array.
    Is 57 equal to 72? No. Move to the next spot in the array.
    Is 60 equal to 72? No. Move to the next spot in the array.
    Is 67 equal to 72? No. Move to the next spot in the array.
    Is 72 equal to 72? Yes. Return the position in the array it is in. Return 10.

b)  Find 41.
    Is 23 equal to 41? No. Move to the next spot in the array.
    Is 27 equal to 41? No. Move to the next spot in the array.
    Is 30 equal to 41? No. Move to the next spot in the array.
    Is 34 equal to 41? No. Move to the next spot in the array.
    Is 41 equal to 41? Yes. Return the position in the array it is in. Return 4.

c)  Find 50
    Is 23 equal to 50? No. Move to the next spot in the array.
    Is 27 equal to 50? No. Move to the next spot in the array.
    Is 30 equal to 50? No. Move to the next spot in the array.
    Is 34 equal to 50? No. Move to the next spot in the array.
    Is 41 equal to 50? No. Move to the next spot in the array.
    Is 51 equal to 50? Since 51 is greater than 51, return -1, meaning that the inputted number is not in the array.
 

Binary Search:

Binary search will first split the array in the middle and see if the number in the middle in the inputted number.
Now, the array is split in two. If the inputted number is bigger than the middle number, it will go to the right of the array.
If the inputted number is less than the middle number, it will go to the left of the array.
This process will continue until the number is found.

[23, 27, 30, 34, 41, 51, 55, 57, 60, 67, 72, 78, 83, 96]

a)  Find 72.
    How long is the array? 13. 
    Divide 13 by 2.
    What is the number in spot 7? 55.
    Is 55 equal to 72? No. 
    Is 72 greater then 55? Yes. Go to the right of the array.
    [57, 60, 67, 72, 78, 83, 96]
    How long is the array? 7. 
    Divide 7 by 2.
    What is the number in spot 3? 72. 
    Is 55 equal to 72? Yes. Return the spot in the array that the number is in.
    
b)  Find 41.
    How long is the array? 13. 
    Divide 13 by 2.
    What is the number in spot 7? 55.
    Is 55 equal to 41? No.
    Is 41 greater then 55? No. Go to the left of the array.
    [23, 27, 30, 34, 41, 51]
    How long is the array? 5. 
    Divide 5 by 2.
    What is the number in spot 2? 30. 
    Is 41 equal to 30? No. 
    Is 41 greater then 30? Yes. Go to the right of the array.
    [34,41,51]
    How long is the array? 3. 
    Divide 3 by 2.
    What is the number in spot 1? 41. 
    Is 41 equal to 41? Yes. Return the spot in the array that the number is in.

c)  Find 50. 
    How long is the array? 13. 
    Divide 13 by 2.
    What is the number in spot 7? 55.
    Is 55 equal to 50? No.
    Is 50 greater then 55? No. Go to the left of the array.
    [23, 27, 30, 34, 41, 51]
    How long is the array? 5. 
    Divide 5 by 2.
    What is the number in spot 2? 30. 
    Is 50 equal to 30? No. 
    Is 50 greater then 30? Yes. Go to the right of the array.
    [34,41,51]
    How long is the array? 3. 
    Divide 3 by 2.
    What is the number in spot 1? 41. 
    Is 50 equal to 41? No. Go to the right of the array.
    [51]
    Is 50 equal to 51? No. Since there are no more unchecked spots in the array. Return -1.
    